<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="678" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="661.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="661.00"> </text><svg id="frames" x="10" width="1180" total_samples="62186558"><g><title>[libexpat.so.1.9.1] (2,006,018 samples, 3.23%)</title><rect x="1.6129%" y="469" width="3.2258%" height="15" fill="rgb(227,0,7)" fg:x="1003009" fg:w="2006018"/><text x="1.8629%" y="479.50">[li..</text></g><g><title>[libexpat.so.1.9.1] (4,012,036 samples, 6.45%)</title><rect x="0.0000%" y="485" width="6.4516%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="4012036"/><text x="0.2500%" y="495.50">[libexpa..</text></g><g><title>[libfontconfig.so.1.12.1] (1,003,009 samples, 1.61%)</title><rect x="4.8387%" y="469" width="1.6129%" height="15" fill="rgb(221,193,54)" fg:x="3009027" fg:w="1003009"/><text x="5.0887%" y="479.50"></text></g><g><title>[libfontconfig.so.1.12.1] (1,003,009 samples, 1.61%)</title><rect x="6.4516%" y="469" width="1.6129%" height="15" fill="rgb(248,212,6)" fg:x="4012036" fg:w="1003009"/><text x="6.7016%" y="479.50"></text></g><g><title>[libfontconfig.so.1.12.1] (1,003,009 samples, 1.61%)</title><rect x="6.4516%" y="453" width="1.6129%" height="15" fill="rgb(208,68,35)" fg:x="4012036" fg:w="1003009"/><text x="6.7016%" y="463.50"></text></g><g><title>[libfontconfig.so.1.12.1] (1,003,009 samples, 1.61%)</title><rect x="6.4516%" y="437" width="1.6129%" height="15" fill="rgb(232,128,0)" fg:x="4012036" fg:w="1003009"/><text x="6.7016%" y="447.50"></text></g><g><title>fc-match (6,018,054 samples, 9.68%)</title><rect x="0.0000%" y="613" width="9.6774%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="6018054"/><text x="0.2500%" y="623.50">fc-match</text></g><g><title>[unknown] (6,018,054 samples, 9.68%)</title><rect x="0.0000%" y="597" width="9.6774%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="6018054"/><text x="0.2500%" y="607.50">[unknown]</text></g><g><title>[libfontconfig.so.1.12.1] (6,018,054 samples, 9.68%)</title><rect x="0.0000%" y="581" width="9.6774%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="6018054"/><text x="0.2500%" y="591.50">[libfontconfig..</text></g><g><title>[libfontconfig.so.1.12.1] (6,018,054 samples, 9.68%)</title><rect x="0.0000%" y="565" width="9.6774%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="6018054"/><text x="0.2500%" y="575.50">[libfontconfig..</text></g><g><title>XML_ParseBuffer (6,018,054 samples, 9.68%)</title><rect x="0.0000%" y="549" width="9.6774%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="6018054"/><text x="0.2500%" y="559.50">XML_ParseBuffer</text></g><g><title>[libexpat.so.1.9.1] (6,018,054 samples, 9.68%)</title><rect x="0.0000%" y="533" width="9.6774%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="6018054"/><text x="0.2500%" y="543.50">[libexpat.so.1..</text></g><g><title>[libexpat.so.1.9.1] (6,018,054 samples, 9.68%)</title><rect x="0.0000%" y="517" width="9.6774%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="6018054"/><text x="0.2500%" y="527.50">[libexpat.so.1..</text></g><g><title>[libexpat.so.1.9.1] (6,018,054 samples, 9.68%)</title><rect x="0.0000%" y="501" width="9.6774%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="6018054"/><text x="0.2500%" y="511.50">[libexpat.so.1..</text></g><g><title>[libfontconfig.so.1.12.1] (2,006,018 samples, 3.23%)</title><rect x="6.4516%" y="485" width="3.2258%" height="15" fill="rgb(217,207,13)" fg:x="4012036" fg:w="2006018"/><text x="6.7016%" y="495.50">[li..</text></g><g><title>malloc (1,003,009 samples, 1.61%)</title><rect x="8.0645%" y="469" width="1.6129%" height="15" fill="rgb(231,73,38)" fg:x="5015045" fg:w="1003009"/><text x="8.3145%" y="479.50"></text></g><g><title>[libc.so.6] (1,003,009 samples, 1.61%)</title><rect x="8.0645%" y="453" width="1.6129%" height="15" fill="rgb(225,20,46)" fg:x="5015045" fg:w="1003009"/><text x="8.3145%" y="463.50"></text></g><g><title>SSL_CTX_new_ex (1,003,009 samples, 1.61%)</title><rect x="9.6774%" y="533" width="1.6129%" height="15" fill="rgb(210,31,41)" fg:x="6018054" fg:w="1003009"/><text x="9.9274%" y="543.50"></text></g><g><title>[libssl.so.3] (1,003,009 samples, 1.61%)</title><rect x="9.6774%" y="517" width="1.6129%" height="15" fill="rgb(221,200,47)" fg:x="6018054" fg:w="1003009"/><text x="9.9274%" y="527.50"></text></g><g><title>[libssl.so.3] (1,003,009 samples, 1.61%)</title><rect x="9.6774%" y="501" width="1.6129%" height="15" fill="rgb(226,26,5)" fg:x="6018054" fg:w="1003009"/><text x="9.9274%" y="511.50"></text></g><g><title>EVP_CIPHER_fetch (1,003,009 samples, 1.61%)</title><rect x="9.6774%" y="485" width="1.6129%" height="15" fill="rgb(249,33,26)" fg:x="6018054" fg:w="1003009"/><text x="9.9274%" y="495.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="9.6774%" y="469" width="1.6129%" height="15" fill="rgb(235,183,28)" fg:x="6018054" fg:w="1003009"/><text x="9.9274%" y="479.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="9.6774%" y="453" width="1.6129%" height="15" fill="rgb(221,5,38)" fg:x="6018054" fg:w="1003009"/><text x="9.9274%" y="463.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="9.6774%" y="437" width="1.6129%" height="15" fill="rgb(247,18,42)" fg:x="6018054" fg:w="1003009"/><text x="9.9274%" y="447.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="9.6774%" y="421" width="1.6129%" height="15" fill="rgb(241,131,45)" fg:x="6018054" fg:w="1003009"/><text x="9.9274%" y="431.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="9.6774%" y="405" width="1.6129%" height="15" fill="rgb(249,31,29)" fg:x="6018054" fg:w="1003009"/><text x="9.9274%" y="415.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="9.6774%" y="389" width="1.6129%" height="15" fill="rgb(225,111,53)" fg:x="6018054" fg:w="1003009"/><text x="9.9274%" y="399.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="9.6774%" y="373" width="1.6129%" height="15" fill="rgb(238,160,17)" fg:x="6018054" fg:w="1003009"/><text x="9.9274%" y="383.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="9.6774%" y="357" width="1.6129%" height="15" fill="rgb(214,148,48)" fg:x="6018054" fg:w="1003009"/><text x="9.9274%" y="367.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="9.6774%" y="341" width="1.6129%" height="15" fill="rgb(232,36,49)" fg:x="6018054" fg:w="1003009"/><text x="9.9274%" y="351.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="9.6774%" y="325" width="1.6129%" height="15" fill="rgb(209,103,24)" fg:x="6018054" fg:w="1003009"/><text x="9.9274%" y="335.50"></text></g><g><title>OPENSSL_LH_retrieve (1,003,009 samples, 1.61%)</title><rect x="9.6774%" y="309" width="1.6129%" height="15" fill="rgb(229,88,8)" fg:x="6018054" fg:w="1003009"/><text x="9.9274%" y="319.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="9.6774%" y="293" width="1.6129%" height="15" fill="rgb(213,181,19)" fg:x="6018054" fg:w="1003009"/><text x="9.9274%" y="303.50"></text></g><g><title>ASN1_item_ex_d2i (1,003,009 samples, 1.61%)</title><rect x="11.2903%" y="357" width="1.6129%" height="15" fill="rgb(254,191,54)" fg:x="7021063" fg:w="1003009"/><text x="11.5403%" y="367.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="11.2903%" y="341" width="1.6129%" height="15" fill="rgb(241,83,37)" fg:x="7021063" fg:w="1003009"/><text x="11.5403%" y="351.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="11.2903%" y="325" width="1.6129%" height="15" fill="rgb(233,36,39)" fg:x="7021063" fg:w="1003009"/><text x="11.5403%" y="335.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="11.2903%" y="309" width="1.6129%" height="15" fill="rgb(226,3,54)" fg:x="7021063" fg:w="1003009"/><text x="11.5403%" y="319.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="11.2903%" y="293" width="1.6129%" height="15" fill="rgb(245,192,40)" fg:x="7021063" fg:w="1003009"/><text x="11.5403%" y="303.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="11.2903%" y="277" width="1.6129%" height="15" fill="rgb(238,167,29)" fg:x="7021063" fg:w="1003009"/><text x="11.5403%" y="287.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="11.2903%" y="261" width="1.6129%" height="15" fill="rgb(232,182,51)" fg:x="7021063" fg:w="1003009"/><text x="11.5403%" y="271.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="11.2903%" y="245" width="1.6129%" height="15" fill="rgb(231,60,39)" fg:x="7021063" fg:w="1003009"/><text x="11.5403%" y="255.50"></text></g><g><title>OBJ_obj2nid (1,003,009 samples, 1.61%)</title><rect x="11.2903%" y="229" width="1.6129%" height="15" fill="rgb(208,69,12)" fg:x="7021063" fg:w="1003009"/><text x="11.5403%" y="239.50"></text></g><g><title>OPENSSL_init_crypto (1,003,009 samples, 1.61%)</title><rect x="11.2903%" y="213" width="1.6129%" height="15" fill="rgb(235,93,37)" fg:x="7021063" fg:w="1003009"/><text x="11.5403%" y="223.50"></text></g><g><title>CRYPTO_THREAD_read_lock (2,006,018 samples, 3.23%)</title><rect x="12.9032%" y="277" width="3.2258%" height="15" fill="rgb(213,116,39)" fg:x="8024072" fg:w="2006018"/><text x="13.1532%" y="287.50">CRY..</text></g><g><title>pthread_rwlock_rdlock (2,006,018 samples, 3.23%)</title><rect x="12.9032%" y="261" width="3.2258%" height="15" fill="rgb(222,207,29)" fg:x="8024072" fg:w="2006018"/><text x="13.1532%" y="271.50">pth..</text></g><g><title>CRYPTO_THREAD_unlock (3,009,027 samples, 4.84%)</title><rect x="16.1290%" y="277" width="4.8387%" height="15" fill="rgb(206,96,30)" fg:x="10030090" fg:w="3009027"/><text x="16.3790%" y="287.50">CRYPTO..</text></g><g><title>pthread_rwlock_unlock (3,009,027 samples, 4.84%)</title><rect x="16.1290%" y="261" width="4.8387%" height="15" fill="rgb(218,138,4)" fg:x="10030090" fg:w="3009027"/><text x="16.3790%" y="271.50">pthrea..</text></g><g><title>CRYPTO_get_ex_data (1,003,009 samples, 1.61%)</title><rect x="20.9677%" y="277" width="1.6129%" height="15" fill="rgb(250,191,14)" fg:x="13039117" fg:w="1003009"/><text x="21.2177%" y="287.50"></text></g><g><title>OPENSSL_strcasecmp (1,003,009 samples, 1.61%)</title><rect x="22.5806%" y="245" width="1.6129%" height="15" fill="rgb(239,60,40)" fg:x="14042126" fg:w="1003009"/><text x="22.8306%" y="255.50"></text></g><g><title>OSSL_DECODER_CTX_add_extra (8,024,072 samples, 12.90%)</title><rect x="12.9032%" y="341" width="12.9032%" height="15" fill="rgb(206,27,48)" fg:x="8024072" fg:w="8024072"/><text x="13.1532%" y="351.50">OSSL_DECODER_CTX_ad..</text></g><g><title>OSSL_DECODER_is_a (8,024,072 samples, 12.90%)</title><rect x="12.9032%" y="325" width="12.9032%" height="15" fill="rgb(225,35,8)" fg:x="8024072" fg:w="8024072"/><text x="13.1532%" y="335.50">OSSL_DECODER_is_a</text></g><g><title>[libcrypto.so.3] (8,024,072 samples, 12.90%)</title><rect x="12.9032%" y="309" width="12.9032%" height="15" fill="rgb(250,213,24)" fg:x="8024072" fg:w="8024072"/><text x="13.1532%" y="319.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (8,024,072 samples, 12.90%)</title><rect x="12.9032%" y="293" width="12.9032%" height="15" fill="rgb(247,123,22)" fg:x="8024072" fg:w="8024072"/><text x="13.1532%" y="303.50">[libcrypto.so.3]</text></g><g><title>OPENSSL_LH_retrieve (2,006,018 samples, 3.23%)</title><rect x="22.5806%" y="277" width="3.2258%" height="15" fill="rgb(231,138,38)" fg:x="14042126" fg:w="2006018"/><text x="22.8306%" y="287.50">OPE..</text></g><g><title>[libcrypto.so.3] (2,006,018 samples, 3.23%)</title><rect x="22.5806%" y="261" width="3.2258%" height="15" fill="rgb(231,145,46)" fg:x="14042126" fg:w="2006018"/><text x="22.8306%" y="271.50">[li..</text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="24.1935%" y="245" width="1.6129%" height="15" fill="rgb(251,118,11)" fg:x="15045135" fg:w="1003009"/><text x="24.4435%" y="255.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="24.1935%" y="229" width="1.6129%" height="15" fill="rgb(217,147,25)" fg:x="15045135" fg:w="1003009"/><text x="24.4435%" y="239.50"></text></g><g><title>OSSL_DECODER_CTX_new_for_pkey (9,027,081 samples, 14.52%)</title><rect x="12.9032%" y="357" width="14.5161%" height="15" fill="rgb(247,81,37)" fg:x="8024072" fg:w="9027081"/><text x="13.1532%" y="367.50">OSSL_DECODER_CTX_new_f..</text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="25.8065%" y="341" width="1.6129%" height="15" fill="rgb(209,12,38)" fg:x="16048144" fg:w="1003009"/><text x="26.0565%" y="351.50"></text></g><g><title>OSSL_DECODER_do_all_provided (1,003,009 samples, 1.61%)</title><rect x="25.8065%" y="325" width="1.6129%" height="15" fill="rgb(227,1,9)" fg:x="16048144" fg:w="1003009"/><text x="26.0565%" y="335.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="25.8065%" y="309" width="1.6129%" height="15" fill="rgb(248,47,43)" fg:x="16048144" fg:w="1003009"/><text x="26.0565%" y="319.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="25.8065%" y="293" width="1.6129%" height="15" fill="rgb(221,10,30)" fg:x="16048144" fg:w="1003009"/><text x="26.0565%" y="303.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="25.8065%" y="277" width="1.6129%" height="15" fill="rgb(210,229,1)" fg:x="16048144" fg:w="1003009"/><text x="26.0565%" y="287.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="25.8065%" y="261" width="1.6129%" height="15" fill="rgb(222,148,37)" fg:x="16048144" fg:w="1003009"/><text x="26.0565%" y="271.50"></text></g><g><title>OSSL_DECODER_is_a (1,003,009 samples, 1.61%)</title><rect x="25.8065%" y="245" width="1.6129%" height="15" fill="rgb(234,67,33)" fg:x="16048144" fg:w="1003009"/><text x="26.0565%" y="255.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="25.8065%" y="229" width="1.6129%" height="15" fill="rgb(247,98,35)" fg:x="16048144" fg:w="1003009"/><text x="26.0565%" y="239.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="25.8065%" y="213" width="1.6129%" height="15" fill="rgb(247,138,52)" fg:x="16048144" fg:w="1003009"/><text x="26.0565%" y="223.50"></text></g><g><title>OPENSSL_LH_retrieve (1,003,009 samples, 1.61%)</title><rect x="25.8065%" y="197" width="1.6129%" height="15" fill="rgb(213,79,30)" fg:x="16048144" fg:w="1003009"/><text x="26.0565%" y="207.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="25.8065%" y="181" width="1.6129%" height="15" fill="rgb(246,177,23)" fg:x="16048144" fg:w="1003009"/><text x="26.0565%" y="191.50"></text></g><g><title>OPENSSL_strcasecmp (1,003,009 samples, 1.61%)</title><rect x="25.8065%" y="165" width="1.6129%" height="15" fill="rgb(230,62,27)" fg:x="16048144" fg:w="1003009"/><text x="26.0565%" y="175.50"></text></g><g><title>[libcrypto.so.3] (2,006,018 samples, 3.23%)</title><rect x="27.4194%" y="261" width="3.2258%" height="15" fill="rgb(216,154,8)" fg:x="17051153" fg:w="2006018"/><text x="27.6694%" y="271.50">[li..</text></g><g><title>[libcrypto.so.3] (2,006,018 samples, 3.23%)</title><rect x="27.4194%" y="245" width="3.2258%" height="15" fill="rgb(244,35,45)" fg:x="17051153" fg:w="2006018"/><text x="27.6694%" y="255.50">[li..</text></g><g><title>[libcrypto.so.3] (2,006,018 samples, 3.23%)</title><rect x="27.4194%" y="229" width="3.2258%" height="15" fill="rgb(251,115,12)" fg:x="17051153" fg:w="2006018"/><text x="27.6694%" y="239.50">[li..</text></g><g><title>[libcrypto.so.3] (2,006,018 samples, 3.23%)</title><rect x="27.4194%" y="213" width="3.2258%" height="15" fill="rgb(240,54,50)" fg:x="17051153" fg:w="2006018"/><text x="27.6694%" y="223.50">[li..</text></g><g><title>[libcrypto.so.3] (2,006,018 samples, 3.23%)</title><rect x="27.4194%" y="197" width="3.2258%" height="15" fill="rgb(233,84,52)" fg:x="17051153" fg:w="2006018"/><text x="27.6694%" y="207.50">[li..</text></g><g><title>[libcrypto.so.3] (2,006,018 samples, 3.23%)</title><rect x="27.4194%" y="181" width="3.2258%" height="15" fill="rgb(207,117,47)" fg:x="17051153" fg:w="2006018"/><text x="27.6694%" y="191.50">[li..</text></g><g><title>ECDSA_size (2,006,018 samples, 3.23%)</title><rect x="27.4194%" y="165" width="3.2258%" height="15" fill="rgb(249,43,39)" fg:x="17051153" fg:w="2006018"/><text x="27.6694%" y="175.50">ECD..</text></g><g><title>i2d_ECDSA_SIG (2,006,018 samples, 3.23%)</title><rect x="27.4194%" y="149" width="3.2258%" height="15" fill="rgb(209,38,44)" fg:x="17051153" fg:w="2006018"/><text x="27.6694%" y="159.50">i2d..</text></g><g><title>[libcrypto.so.3] (2,006,018 samples, 3.23%)</title><rect x="27.4194%" y="133" width="3.2258%" height="15" fill="rgb(236,212,23)" fg:x="17051153" fg:w="2006018"/><text x="27.6694%" y="143.50">[li..</text></g><g><title>[libcrypto.so.3] (2,006,018 samples, 3.23%)</title><rect x="27.4194%" y="117" width="3.2258%" height="15" fill="rgb(242,79,21)" fg:x="17051153" fg:w="2006018"/><text x="27.6694%" y="127.50">[li..</text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="29.0323%" y="101" width="1.6129%" height="15" fill="rgb(211,96,35)" fg:x="18054162" fg:w="1003009"/><text x="29.2823%" y="111.50"></text></g><g><title>CRYPTO_free (1,003,009 samples, 1.61%)</title><rect x="29.0323%" y="85" width="1.6129%" height="15" fill="rgb(253,215,40)" fg:x="18054162" fg:w="1003009"/><text x="29.2823%" y="95.50"></text></g><g><title>OSSL_DECODER_from_data (3,009,027 samples, 4.84%)</title><rect x="27.4194%" y="357" width="4.8387%" height="15" fill="rgb(211,81,21)" fg:x="17051153" fg:w="3009027"/><text x="27.6694%" y="367.50">OSSL_D..</text></g><g><title>OSSL_DECODER_from_bio (3,009,027 samples, 4.84%)</title><rect x="27.4194%" y="341" width="4.8387%" height="15" fill="rgb(208,190,38)" fg:x="17051153" fg:w="3009027"/><text x="27.6694%" y="351.50">OSSL_D..</text></g><g><title>[libcrypto.so.3] (3,009,027 samples, 4.84%)</title><rect x="27.4194%" y="325" width="4.8387%" height="15" fill="rgb(235,213,38)" fg:x="17051153" fg:w="3009027"/><text x="27.6694%" y="335.50">[libcr..</text></g><g><title>[libcrypto.so.3] (3,009,027 samples, 4.84%)</title><rect x="27.4194%" y="309" width="4.8387%" height="15" fill="rgb(237,122,38)" fg:x="17051153" fg:w="3009027"/><text x="27.6694%" y="319.50">[libcr..</text></g><g><title>[libcrypto.so.3] (3,009,027 samples, 4.84%)</title><rect x="27.4194%" y="293" width="4.8387%" height="15" fill="rgb(244,218,35)" fg:x="17051153" fg:w="3009027"/><text x="27.6694%" y="303.50">[libcr..</text></g><g><title>[libcrypto.so.3] (3,009,027 samples, 4.84%)</title><rect x="27.4194%" y="277" width="4.8387%" height="15" fill="rgb(240,68,47)" fg:x="17051153" fg:w="3009027"/><text x="27.6694%" y="287.50">[libcr..</text></g><g><title>d2i_EC_PUBKEY (1,003,009 samples, 1.61%)</title><rect x="30.6452%" y="261" width="1.6129%" height="15" fill="rgb(210,16,53)" fg:x="19057171" fg:w="1003009"/><text x="30.8952%" y="271.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="30.6452%" y="245" width="1.6129%" height="15" fill="rgb(235,124,12)" fg:x="19057171" fg:w="1003009"/><text x="30.8952%" y="255.50"></text></g><g><title>ASN1_item_d2i_ex (1,003,009 samples, 1.61%)</title><rect x="30.6452%" y="229" width="1.6129%" height="15" fill="rgb(224,169,11)" fg:x="19057171" fg:w="1003009"/><text x="30.8952%" y="239.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="30.6452%" y="213" width="1.6129%" height="15" fill="rgb(250,166,2)" fg:x="19057171" fg:w="1003009"/><text x="30.8952%" y="223.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="30.6452%" y="197" width="1.6129%" height="15" fill="rgb(242,216,29)" fg:x="19057171" fg:w="1003009"/><text x="30.8952%" y="207.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="30.6452%" y="181" width="1.6129%" height="15" fill="rgb(230,116,27)" fg:x="19057171" fg:w="1003009"/><text x="30.8952%" y="191.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="30.6452%" y="165" width="1.6129%" height="15" fill="rgb(228,99,48)" fg:x="19057171" fg:w="1003009"/><text x="30.8952%" y="175.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="30.6452%" y="149" width="1.6129%" height="15" fill="rgb(253,11,6)" fg:x="19057171" fg:w="1003009"/><text x="30.8952%" y="159.50"></text></g><g><title>EC_GROUP_new_by_curve_name_ex (1,003,009 samples, 1.61%)</title><rect x="30.6452%" y="133" width="1.6129%" height="15" fill="rgb(247,143,39)" fg:x="19057171" fg:w="1003009"/><text x="30.8952%" y="143.50"></text></g><g><title>EC_POINT_set_affine_coordinates (1,003,009 samples, 1.61%)</title><rect x="30.6452%" y="117" width="1.6129%" height="15" fill="rgb(236,97,10)" fg:x="19057171" fg:w="1003009"/><text x="30.8952%" y="127.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="30.6452%" y="101" width="1.6129%" height="15" fill="rgb(233,208,19)" fg:x="19057171" fg:w="1003009"/><text x="30.8952%" y="111.50"></text></g><g><title>BN_nnmod (1,003,009 samples, 1.61%)</title><rect x="30.6452%" y="85" width="1.6129%" height="15" fill="rgb(216,164,2)" fg:x="19057171" fg:w="1003009"/><text x="30.8952%" y="95.50"></text></g><g><title>BN_div (1,003,009 samples, 1.61%)</title><rect x="30.6452%" y="69" width="1.6129%" height="15" fill="rgb(220,129,5)" fg:x="19057171" fg:w="1003009"/><text x="30.8952%" y="79.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="30.6452%" y="53" width="1.6129%" height="15" fill="rgb(242,17,10)" fg:x="19057171" fg:w="1003009"/><text x="30.8952%" y="63.50"></text></g><g><title>BN_num_bits_word (1,003,009 samples, 1.61%)</title><rect x="30.6452%" y="37" width="1.6129%" height="15" fill="rgb(242,107,0)" fg:x="19057171" fg:w="1003009"/><text x="30.8952%" y="47.50"></text></g><g><title>ASN1_item_d2i_ex (14,042,126 samples, 22.58%)</title><rect x="11.2903%" y="469" width="22.5806%" height="15" fill="rgb(251,28,31)" fg:x="7021063" fg:w="14042126"/><text x="11.5403%" y="479.50">ASN1_item_d2i_ex</text></g><g><title>[libcrypto.so.3] (14,042,126 samples, 22.58%)</title><rect x="11.2903%" y="453" width="22.5806%" height="15" fill="rgb(233,223,10)" fg:x="7021063" fg:w="14042126"/><text x="11.5403%" y="463.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (14,042,126 samples, 22.58%)</title><rect x="11.2903%" y="437" width="22.5806%" height="15" fill="rgb(215,21,27)" fg:x="7021063" fg:w="14042126"/><text x="11.5403%" y="447.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (14,042,126 samples, 22.58%)</title><rect x="11.2903%" y="421" width="22.5806%" height="15" fill="rgb(232,23,21)" fg:x="7021063" fg:w="14042126"/><text x="11.5403%" y="431.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (14,042,126 samples, 22.58%)</title><rect x="11.2903%" y="405" width="22.5806%" height="15" fill="rgb(244,5,23)" fg:x="7021063" fg:w="14042126"/><text x="11.5403%" y="415.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (14,042,126 samples, 22.58%)</title><rect x="11.2903%" y="389" width="22.5806%" height="15" fill="rgb(226,81,46)" fg:x="7021063" fg:w="14042126"/><text x="11.5403%" y="399.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (14,042,126 samples, 22.58%)</title><rect x="11.2903%" y="373" width="22.5806%" height="15" fill="rgb(247,70,30)" fg:x="7021063" fg:w="14042126"/><text x="11.5403%" y="383.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="32.2581%" y="357" width="1.6129%" height="15" fill="rgb(212,68,19)" fg:x="20060180" fg:w="1003009"/><text x="32.5081%" y="367.50"></text></g><g><title>ASN1_STRING_to_UTF8 (1,003,009 samples, 1.61%)</title><rect x="32.2581%" y="341" width="1.6129%" height="15" fill="rgb(240,187,13)" fg:x="20060180" fg:w="1003009"/><text x="32.5081%" y="351.50"></text></g><g><title>ASN1_mbstring_copy (1,003,009 samples, 1.61%)</title><rect x="32.2581%" y="325" width="1.6129%" height="15" fill="rgb(223,113,26)" fg:x="20060180" fg:w="1003009"/><text x="32.5081%" y="335.50"></text></g><g><title>ASN1_mbstring_ncopy (1,003,009 samples, 1.61%)</title><rect x="32.2581%" y="309" width="1.6129%" height="15" fill="rgb(206,192,2)" fg:x="20060180" fg:w="1003009"/><text x="32.5081%" y="319.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="32.2581%" y="293" width="1.6129%" height="15" fill="rgb(241,108,4)" fg:x="20060180" fg:w="1003009"/><text x="32.5081%" y="303.50"></text></g><g><title>X509_STORE_set_default_paths_ex (15,045,135 samples, 24.19%)</title><rect x="11.2903%" y="533" width="24.1935%" height="15" fill="rgb(247,173,49)" fg:x="7021063" fg:w="15045135"/><text x="11.5403%" y="543.50">X509_STORE_set_default_paths_ex</text></g><g><title>[libcrypto.so.3] (15,045,135 samples, 24.19%)</title><rect x="11.2903%" y="517" width="24.1935%" height="15" fill="rgb(224,114,35)" fg:x="7021063" fg:w="15045135"/><text x="11.5403%" y="527.50">[libcrypto.so.3]</text></g><g><title>X509_load_cert_crl_file_ex (15,045,135 samples, 24.19%)</title><rect x="11.2903%" y="501" width="24.1935%" height="15" fill="rgb(245,159,27)" fg:x="7021063" fg:w="15045135"/><text x="11.5403%" y="511.50">X509_load_cert_crl_file_ex</text></g><g><title>PEM_X509_INFO_read_bio_ex (15,045,135 samples, 24.19%)</title><rect x="11.2903%" y="485" width="24.1935%" height="15" fill="rgb(245,172,44)" fg:x="7021063" fg:w="15045135"/><text x="11.5403%" y="495.50">PEM_X509_INFO_read_bio_ex</text></g><g><title>PEM_read_bio_ex (1,003,009 samples, 1.61%)</title><rect x="33.8710%" y="469" width="1.6129%" height="15" fill="rgb(236,23,11)" fg:x="21063189" fg:w="1003009"/><text x="34.1210%" y="479.50"></text></g><g><title>EVP_DecodeUpdate (1,003,009 samples, 1.61%)</title><rect x="33.8710%" y="453" width="1.6129%" height="15" fill="rgb(205,117,38)" fg:x="21063189" fg:w="1003009"/><text x="34.1210%" y="463.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="33.8710%" y="437" width="1.6129%" height="15" fill="rgb(237,72,25)" fg:x="21063189" fg:w="1003009"/><text x="34.1210%" y="447.50"></text></g><g><title>notification_se (17,051,153 samples, 27.42%)</title><rect x="9.6774%" y="613" width="27.4194%" height="15" fill="rgb(244,70,9)" fg:x="6018054" fg:w="17051153"/><text x="9.9274%" y="623.50">notification_se</text></g><g><title>[unknown] (17,051,153 samples, 27.42%)</title><rect x="9.6774%" y="597" width="27.4194%" height="15" fill="rgb(217,125,39)" fg:x="6018054" fg:w="17051153"/><text x="9.9274%" y="607.50">[unknown]</text></g><g><title>notification_service::main (17,051,153 samples, 27.42%)</title><rect x="9.6774%" y="581" width="27.4194%" height="15" fill="rgb(235,36,10)" fg:x="6018054" fg:w="17051153"/><text x="9.9274%" y="591.50">notification_service::main</text></g><g><title>notification_service::main::_{{closure}} (17,051,153 samples, 27.42%)</title><rect x="9.6774%" y="565" width="27.4194%" height="15" fill="rgb(251,123,47)" fg:x="6018054" fg:w="17051153"/><text x="9.9274%" y="575.50">notification_service::main::_{{closure}}</text></g><g><title>notification_service::app::app::_{{closure}} (17,051,153 samples, 27.42%)</title><rect x="9.6774%" y="549" width="27.4194%" height="15" fill="rgb(221,13,13)" fg:x="6018054" fg:w="17051153"/><text x="9.9274%" y="559.50">notification_service::app::app::_{{closure}}</text></g><g><title>axum::routing::Endpoint&lt;S&gt;::layer (1,003,009 samples, 1.61%)</title><rect x="35.4839%" y="533" width="1.6129%" height="15" fill="rgb(238,131,9)" fg:x="22066198" fg:w="1003009"/><text x="35.7339%" y="543.50"></text></g><g><title>malloc (1,003,009 samples, 1.61%)</title><rect x="35.4839%" y="517" width="1.6129%" height="15" fill="rgb(211,50,8)" fg:x="22066198" fg:w="1003009"/><text x="35.7339%" y="527.50"></text></g><g><title>[libc.so.6] (1,003,009 samples, 1.61%)</title><rect x="35.4839%" y="501" width="1.6129%" height="15" fill="rgb(245,182,24)" fg:x="22066198" fg:w="1003009"/><text x="35.7339%" y="511.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,006,018 samples, 3.23%)</title><rect x="37.0968%" y="517" width="3.2258%" height="15" fill="rgb(242,14,37)" fg:x="23069207" fg:w="2006018"/><text x="37.3468%" y="527.50">ray..</text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (2,006,018 samples, 3.23%)</title><rect x="37.0968%" y="501" width="3.2258%" height="15" fill="rgb(246,228,12)" fg:x="23069207" fg:w="2006018"/><text x="37.3468%" y="511.50">cro..</text></g><g><title>crossbeam_epoch::default::with_handle (2,006,018 samples, 3.23%)</title><rect x="37.0968%" y="485" width="3.2258%" height="15" fill="rgb(213,55,15)" fg:x="23069207" fg:w="2006018"/><text x="37.3468%" y="495.50">cro..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (1,003,009 samples, 1.61%)</title><rect x="40.3226%" y="501" width="1.6129%" height="15" fill="rgb(209,9,3)" fg:x="25075225" fg:w="1003009"/><text x="40.5726%" y="511.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (1,003,009 samples, 1.61%)</title><rect x="40.3226%" y="485" width="1.6129%" height="15" fill="rgb(230,59,30)" fg:x="25075225" fg:w="1003009"/><text x="40.5726%" y="495.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1,003,009 samples, 1.61%)</title><rect x="40.3226%" y="469" width="1.6129%" height="15" fill="rgb(209,121,21)" fg:x="25075225" fg:w="1003009"/><text x="40.5726%" y="479.50"></text></g><g><title>clock_gettime (1,003,009 samples, 1.61%)</title><rect x="40.3226%" y="453" width="1.6129%" height="15" fill="rgb(220,109,13)" fg:x="25075225" fg:w="1003009"/><text x="40.5726%" y="463.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse (1,003,009 samples, 1.61%)</title><rect x="41.9355%" y="437" width="1.6129%" height="15" fill="rgb(232,18,1)" fg:x="26078234" fg:w="1003009"/><text x="42.1855%" y="447.50"></text></g><g><title>malloc (1,003,009 samples, 1.61%)</title><rect x="41.9355%" y="421" width="1.6129%" height="15" fill="rgb(215,41,42)" fg:x="26078234" fg:w="1003009"/><text x="42.1855%" y="431.50"></text></g><g><title>[libc.so.6] (1,003,009 samples, 1.61%)</title><rect x="41.9355%" y="405" width="1.6129%" height="15" fill="rgb(224,123,36)" fg:x="26078234" fg:w="1003009"/><text x="42.1855%" y="415.50"></text></g><g><title>[libc.so.6] (1,003,009 samples, 1.61%)</title><rect x="41.9355%" y="389" width="1.6129%" height="15" fill="rgb(240,125,3)" fg:x="26078234" fg:w="1003009"/><text x="42.1855%" y="399.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_write (1,003,009 samples, 1.61%)</title><rect x="43.5484%" y="437" width="1.6129%" height="15" fill="rgb(205,98,50)" fg:x="27081243" fg:w="1003009"/><text x="43.7984%" y="447.50"></text></g><g><title>&lt;axum::routing::route::RouteFuture&lt;E&gt; as core::future::future::Future&gt;::poll (1,003,009 samples, 1.61%)</title><rect x="43.5484%" y="421" width="1.6129%" height="15" fill="rgb(205,185,37)" fg:x="27081243" fg:w="1003009"/><text x="43.7984%" y="431.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_insert2 (1,003,009 samples, 1.61%)</title><rect x="43.5484%" y="405" width="1.6129%" height="15" fill="rgb(238,207,15)" fg:x="27081243" fg:w="1003009"/><text x="43.7984%" y="415.50"></text></g><g><title>&lt;axum::serve::Serve&lt;M,S&gt; as core::future::into_future::IntoFuture&gt;::into_future::_{{closure}}::_{{closure}} (3,009,027 samples, 4.84%)</title><rect x="41.9355%" y="469" width="4.8387%" height="15" fill="rgb(213,199,42)" fg:x="26078234" fg:w="3009027"/><text x="42.1855%" y="479.50">&lt;axum:..</text></g><g><title>&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (3,009,027 samples, 4.84%)</title><rect x="41.9355%" y="453" width="4.8387%" height="15" fill="rgb(235,201,11)" fg:x="26078234" fg:w="3009027"/><text x="42.1855%" y="463.50">&lt;hyper..</text></g><g><title>malloc (1,003,009 samples, 1.61%)</title><rect x="45.1613%" y="437" width="1.6129%" height="15" fill="rgb(207,46,11)" fg:x="28084252" fg:w="1003009"/><text x="45.4113%" y="447.50"></text></g><g><title>ASN1_item_d2i_ex (1,003,009 samples, 1.61%)</title><rect x="46.7742%" y="389" width="1.6129%" height="15" fill="rgb(241,35,35)" fg:x="29087261" fg:w="1003009"/><text x="47.0242%" y="399.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="46.7742%" y="373" width="1.6129%" height="15" fill="rgb(243,32,47)" fg:x="29087261" fg:w="1003009"/><text x="47.0242%" y="383.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="46.7742%" y="357" width="1.6129%" height="15" fill="rgb(247,202,23)" fg:x="29087261" fg:w="1003009"/><text x="47.0242%" y="367.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="46.7742%" y="341" width="1.6129%" height="15" fill="rgb(219,102,11)" fg:x="29087261" fg:w="1003009"/><text x="47.0242%" y="351.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="46.7742%" y="325" width="1.6129%" height="15" fill="rgb(243,110,44)" fg:x="29087261" fg:w="1003009"/><text x="47.0242%" y="335.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="46.7742%" y="309" width="1.6129%" height="15" fill="rgb(222,74,54)" fg:x="29087261" fg:w="1003009"/><text x="47.0242%" y="319.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="46.7742%" y="293" width="1.6129%" height="15" fill="rgb(216,99,12)" fg:x="29087261" fg:w="1003009"/><text x="47.0242%" y="303.50"></text></g><g><title>OSSL_DECODER_from_data (1,003,009 samples, 1.61%)</title><rect x="46.7742%" y="277" width="1.6129%" height="15" fill="rgb(226,22,26)" fg:x="29087261" fg:w="1003009"/><text x="47.0242%" y="287.50"></text></g><g><title>OSSL_DECODER_from_bio (1,003,009 samples, 1.61%)</title><rect x="46.7742%" y="261" width="1.6129%" height="15" fill="rgb(217,163,10)" fg:x="29087261" fg:w="1003009"/><text x="47.0242%" y="271.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="46.7742%" y="245" width="1.6129%" height="15" fill="rgb(213,25,53)" fg:x="29087261" fg:w="1003009"/><text x="47.0242%" y="255.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="46.7742%" y="229" width="1.6129%" height="15" fill="rgb(252,105,26)" fg:x="29087261" fg:w="1003009"/><text x="47.0242%" y="239.50"></text></g><g><title>ASN1_item_free (1,003,009 samples, 1.61%)</title><rect x="46.7742%" y="213" width="1.6129%" height="15" fill="rgb(220,39,43)" fg:x="29087261" fg:w="1003009"/><text x="47.0242%" y="223.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="46.7742%" y="197" width="1.6129%" height="15" fill="rgb(229,68,48)" fg:x="29087261" fg:w="1003009"/><text x="47.0242%" y="207.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="46.7742%" y="181" width="1.6129%" height="15" fill="rgb(252,8,32)" fg:x="29087261" fg:w="1003009"/><text x="47.0242%" y="191.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="46.7742%" y="165" width="1.6129%" height="15" fill="rgb(223,20,43)" fg:x="29087261" fg:w="1003009"/><text x="47.0242%" y="175.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="46.7742%" y="149" width="1.6129%" height="15" fill="rgb(229,81,49)" fg:x="29087261" fg:w="1003009"/><text x="47.0242%" y="159.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="46.7742%" y="133" width="1.6129%" height="15" fill="rgb(236,28,36)" fg:x="29087261" fg:w="1003009"/><text x="47.0242%" y="143.50"></text></g><g><title>EVP_DigestVerifyFinal (1,003,009 samples, 1.61%)</title><rect x="48.3871%" y="389" width="1.6129%" height="15" fill="rgb(249,185,26)" fg:x="30090270" fg:w="1003009"/><text x="48.6371%" y="399.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="48.3871%" y="373" width="1.6129%" height="15" fill="rgb(249,174,33)" fg:x="30090270" fg:w="1003009"/><text x="48.6371%" y="383.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="48.3871%" y="357" width="1.6129%" height="15" fill="rgb(233,201,37)" fg:x="30090270" fg:w="1003009"/><text x="48.6371%" y="367.50"></text></g><g><title>RSA_verify_PKCS1_PSS_mgf1 (1,003,009 samples, 1.61%)</title><rect x="48.3871%" y="341" width="1.6129%" height="15" fill="rgb(221,78,26)" fg:x="30090270" fg:w="1003009"/><text x="48.6371%" y="351.50"></text></g><g><title>PKCS1_MGF1 (1,003,009 samples, 1.61%)</title><rect x="48.3871%" y="325" width="1.6129%" height="15" fill="rgb(250,127,30)" fg:x="30090270" fg:w="1003009"/><text x="48.6371%" y="335.50"></text></g><g><title>X509_STORE_CTX_get1_issuer (1,003,009 samples, 1.61%)</title><rect x="51.6129%" y="325" width="1.6129%" height="15" fill="rgb(230,49,44)" fg:x="32096288" fg:w="1003009"/><text x="51.8629%" y="335.50"></text></g><g><title>X509_STORE_CTX_get_by_subject (1,003,009 samples, 1.61%)</title><rect x="51.6129%" y="309" width="1.6129%" height="15" fill="rgb(229,67,23)" fg:x="32096288" fg:w="1003009"/><text x="51.8629%" y="319.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="51.6129%" y="293" width="1.6129%" height="15" fill="rgb(249,83,47)" fg:x="32096288" fg:w="1003009"/><text x="51.8629%" y="303.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="51.6129%" y="277" width="1.6129%" height="15" fill="rgb(215,43,3)" fg:x="32096288" fg:w="1003009"/><text x="51.8629%" y="287.50"></text></g><g><title>OSSL_STORE_open_ex (1,003,009 samples, 1.61%)</title><rect x="51.6129%" y="261" width="1.6129%" height="15" fill="rgb(238,154,13)" fg:x="32096288" fg:w="1003009"/><text x="51.8629%" y="271.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="51.6129%" y="245" width="1.6129%" height="15" fill="rgb(219,56,2)" fg:x="32096288" fg:w="1003009"/><text x="51.8629%" y="255.50"></text></g><g><title>ERR_set_debug (1,003,009 samples, 1.61%)</title><rect x="51.6129%" y="229" width="1.6129%" height="15" fill="rgb(233,0,4)" fg:x="32096288" fg:w="1003009"/><text x="51.8629%" y="239.50"></text></g><g><title>X509_verify_cert (2,006,018 samples, 3.23%)</title><rect x="51.6129%" y="373" width="3.2258%" height="15" fill="rgb(235,30,7)" fg:x="32096288" fg:w="2006018"/><text x="51.8629%" y="383.50">X50..</text></g><g><title>[libcrypto.so.3] (2,006,018 samples, 3.23%)</title><rect x="51.6129%" y="357" width="3.2258%" height="15" fill="rgb(250,79,13)" fg:x="32096288" fg:w="2006018"/><text x="51.8629%" y="367.50">[li..</text></g><g><title>[libcrypto.so.3] (2,006,018 samples, 3.23%)</title><rect x="51.6129%" y="341" width="3.2258%" height="15" fill="rgb(211,146,34)" fg:x="32096288" fg:w="2006018"/><text x="51.8629%" y="351.50">[li..</text></g><g><title>X509_check_host (1,003,009 samples, 1.61%)</title><rect x="53.2258%" y="325" width="1.6129%" height="15" fill="rgb(228,22,38)" fg:x="33099297" fg:w="1003009"/><text x="53.4758%" y="335.50"></text></g><g><title>[libc.so.6] (12,036,108 samples, 19.35%)</title><rect x="37.0968%" y="597" width="19.3548%" height="15" fill="rgb(235,168,5)" fg:x="23069207" fg:w="12036108"/><text x="37.3468%" y="607.50">[libc.so.6]</text></g><g><title>[libc.so.6] (12,036,108 samples, 19.35%)</title><rect x="37.0968%" y="581" width="19.3548%" height="15" fill="rgb(221,155,16)" fg:x="23069207" fg:w="12036108"/><text x="37.3468%" y="591.50">[libc.so.6]</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (12,036,108 samples, 19.35%)</title><rect x="37.0968%" y="565" width="19.3548%" height="15" fill="rgb(215,215,53)" fg:x="23069207" fg:w="12036108"/><text x="37.3468%" y="575.50">std::sys::pal::unix::thread::T..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (12,036,108 samples, 19.35%)</title><rect x="37.0968%" y="549" width="19.3548%" height="15" fill="rgb(223,4,10)" fg:x="23069207" fg:w="12036108"/><text x="37.3468%" y="559.50">core::ops::function::FnOnce::c..</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (12,036,108 samples, 19.35%)</title><rect x="37.0968%" y="533" width="19.3548%" height="15" fill="rgb(234,103,6)" fg:x="23069207" fg:w="12036108"/><text x="37.3468%" y="543.50">std::sys::backtrace::__rust_be..</text></g><g><title>tokio::runtime::task::raw::poll (10,030,090 samples, 16.13%)</title><rect x="40.3226%" y="517" width="16.1290%" height="15" fill="rgb(227,97,0)" fg:x="25075225" fg:w="10030090"/><text x="40.5726%" y="527.50">tokio::runtime::task::raw..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (9,027,081 samples, 14.52%)</title><rect x="41.9355%" y="501" width="14.5161%" height="15" fill="rgb(234,150,53)" fg:x="26078234" fg:w="9027081"/><text x="42.1855%" y="511.50">tokio::runtime::schedu..</text></g><g><title>tokio::runtime::task::raw::poll (9,027,081 samples, 14.52%)</title><rect x="41.9355%" y="485" width="14.5161%" height="15" fill="rgb(228,201,54)" fg:x="26078234" fg:w="9027081"/><text x="42.1855%" y="495.50">tokio::runtime::task::..</text></g><g><title>lettre::transport::smtp::pool::async_impl::Pool&lt;E&gt;::new::_{{closure}} (6,018,054 samples, 9.68%)</title><rect x="46.7742%" y="469" width="9.6774%" height="15" fill="rgb(222,22,37)" fg:x="29087261" fg:w="6018054"/><text x="47.0242%" y="479.50">lettre::transp..</text></g><g><title>&lt;lettre::executor::Tokio1Executor as lettre::executor::Executor&gt;::connect::_{{closure}} (6,018,054 samples, 9.68%)</title><rect x="46.7742%" y="453" width="9.6774%" height="15" fill="rgb(237,53,32)" fg:x="29087261" fg:w="6018054"/><text x="47.0242%" y="463.50">&lt;lettre::execu..</text></g><g><title>lettre::transport::smtp::client::async_net::AsyncNetworkStream::upgrade_tls::_{{closure}} (6,018,054 samples, 9.68%)</title><rect x="46.7742%" y="437" width="9.6774%" height="15" fill="rgb(233,25,53)" fg:x="29087261" fg:w="6018054"/><text x="47.0242%" y="447.50">lettre::transp..</text></g><g><title>[libssl.so.3] (6,018,054 samples, 9.68%)</title><rect x="46.7742%" y="421" width="9.6774%" height="15" fill="rgb(210,40,34)" fg:x="29087261" fg:w="6018054"/><text x="47.0242%" y="431.50">[libssl.so.3]</text></g><g><title>[libssl.so.3] (6,018,054 samples, 9.68%)</title><rect x="46.7742%" y="405" width="9.6774%" height="15" fill="rgb(241,220,44)" fg:x="29087261" fg:w="6018054"/><text x="47.0242%" y="415.50">[libssl.so.3]</text></g><g><title>[libssl.so.3] (4,012,036 samples, 6.45%)</title><rect x="50.0000%" y="389" width="6.4516%" height="15" fill="rgb(235,28,35)" fg:x="31093279" fg:w="4012036"/><text x="50.2500%" y="399.50">[libssl...</text></g><g><title>[libssl.so.3] (1,003,009 samples, 1.61%)</title><rect x="54.8387%" y="373" width="1.6129%" height="15" fill="rgb(210,56,17)" fg:x="34102306" fg:w="1003009"/><text x="55.0887%" y="383.50"></text></g><g><title>[libssl.so.3] (1,003,009 samples, 1.61%)</title><rect x="54.8387%" y="357" width="1.6129%" height="15" fill="rgb(224,130,29)" fg:x="34102306" fg:w="1003009"/><text x="55.0887%" y="367.50"></text></g><g><title>EVP_PKEY_derive_init_ex (1,003,009 samples, 1.61%)</title><rect x="54.8387%" y="341" width="1.6129%" height="15" fill="rgb(235,212,8)" fg:x="34102306" fg:w="1003009"/><text x="55.0887%" y="351.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="54.8387%" y="325" width="1.6129%" height="15" fill="rgb(223,33,50)" fg:x="34102306" fg:w="1003009"/><text x="55.0887%" y="335.50"></text></g><g><title>&lt;flate2::gz::read::GzDecoder&lt;R&gt; as std::io::Read&gt;::read (3,009,027 samples, 4.84%)</title><rect x="56.4516%" y="405" width="4.8387%" height="15" fill="rgb(219,149,13)" fg:x="35105315" fg:w="3009027"/><text x="56.7016%" y="415.50">&lt;flate..</text></g><g><title>&lt;flate2::mem::Decompress as flate2::zio::Ops&gt;::run (3,009,027 samples, 4.84%)</title><rect x="56.4516%" y="389" width="4.8387%" height="15" fill="rgb(250,156,29)" fg:x="35105315" fg:w="3009027"/><text x="56.7016%" y="399.50">&lt;flate..</text></g><g><title>miniz_oxide::inflate::stream::inflate_loop (3,009,027 samples, 4.84%)</title><rect x="56.4516%" y="373" width="4.8387%" height="15" fill="rgb(216,193,19)" fg:x="35105315" fg:w="3009027"/><text x="56.7016%" y="383.50">miniz_..</text></g><g><title>miniz_oxide::inflate::core::decompress (3,009,027 samples, 4.84%)</title><rect x="56.4516%" y="357" width="4.8387%" height="15" fill="rgb(216,135,14)" fg:x="35105315" fg:w="3009027"/><text x="56.7016%" y="367.50">miniz_..</text></g><g><title>[libc.so.6] (1,003,009 samples, 1.61%)</title><rect x="59.6774%" y="341" width="1.6129%" height="15" fill="rgb(241,47,5)" fg:x="37111333" fg:w="1003009"/><text x="59.9274%" y="351.50"></text></g><g><title>printpdf::font::BuiltinFont::get_subset_font (4,012,036 samples, 6.45%)</title><rect x="56.4516%" y="437" width="6.4516%" height="15" fill="rgb(233,42,35)" fg:x="35105315" fg:w="4012036"/><text x="56.7016%" y="447.50">printpdf..</text></g><g><title>printpdf::utils::uncompress (4,012,036 samples, 6.45%)</title><rect x="56.4516%" y="421" width="6.4516%" height="15" fill="rgb(231,13,6)" fg:x="35105315" fg:w="4012036"/><text x="56.7016%" y="431.50">printpdf..</text></g><g><title>std::io::default_read_to_end::small_probe_read (1,003,009 samples, 1.61%)</title><rect x="61.2903%" y="405" width="1.6129%" height="15" fill="rgb(207,181,40)" fg:x="38114342" fg:w="1003009"/><text x="61.5403%" y="415.50"></text></g><g><title>&lt;flate2::gz::read::GzDecoder&lt;R&gt; as std::io::Read&gt;::read (1,003,009 samples, 1.61%)</title><rect x="61.2903%" y="389" width="1.6129%" height="15" fill="rgb(254,173,49)" fg:x="38114342" fg:w="1003009"/><text x="61.5403%" y="399.50"></text></g><g><title>&lt;flate2::mem::Decompress as flate2::zio::Ops&gt;::run (1,003,009 samples, 1.61%)</title><rect x="61.2903%" y="373" width="1.6129%" height="15" fill="rgb(221,1,38)" fg:x="38114342" fg:w="1003009"/><text x="61.5403%" y="383.50"></text></g><g><title>miniz_oxide::inflate::stream::inflate_loop (1,003,009 samples, 1.61%)</title><rect x="61.2903%" y="357" width="1.6129%" height="15" fill="rgb(206,124,46)" fg:x="38114342" fg:w="1003009"/><text x="61.5403%" y="367.50"></text></g><g><title>miniz_oxide::inflate::core::decompress (1,003,009 samples, 1.61%)</title><rect x="61.2903%" y="341" width="1.6129%" height="15" fill="rgb(249,21,11)" fg:x="38114342" fg:w="1003009"/><text x="61.5403%" y="351.50"></text></g><g><title>&lt;flate2::gz::read::GzDecoder&lt;R&gt; as std::io::Read&gt;::read (1,003,009 samples, 1.61%)</title><rect x="62.9032%" y="389" width="1.6129%" height="15" fill="rgb(222,201,40)" fg:x="39117351" fg:w="1003009"/><text x="63.1532%" y="399.50"></text></g><g><title>&lt;flate2::mem::Decompress as flate2::zio::Ops&gt;::run (1,003,009 samples, 1.61%)</title><rect x="62.9032%" y="373" width="1.6129%" height="15" fill="rgb(235,61,29)" fg:x="39117351" fg:w="1003009"/><text x="63.1532%" y="383.50"></text></g><g><title>miniz_oxide::inflate::stream::inflate_loop (1,003,009 samples, 1.61%)</title><rect x="62.9032%" y="357" width="1.6129%" height="15" fill="rgb(219,207,3)" fg:x="39117351" fg:w="1003009"/><text x="63.1532%" y="367.50"></text></g><g><title>miniz_oxide::inflate::core::decompress (1,003,009 samples, 1.61%)</title><rect x="62.9032%" y="341" width="1.6129%" height="15" fill="rgb(222,56,46)" fg:x="39117351" fg:w="1003009"/><text x="63.1532%" y="351.50"></text></g><g><title>[libc.so.6] (1,003,009 samples, 1.61%)</title><rect x="74.1935%" y="309" width="1.6129%" height="15" fill="rgb(239,76,54)" fg:x="46138414" fg:w="1003009"/><text x="74.4435%" y="319.50"></text></g><g><title>miniz_oxide::inflate::core::apply_match (1,003,009 samples, 1.61%)</title><rect x="75.8065%" y="309" width="1.6129%" height="15" fill="rgb(231,124,27)" fg:x="47141423" fg:w="1003009"/><text x="76.0565%" y="319.50"></text></g><g><title>&lt;axum::middleware::from_fn::FromFn&lt;F,S,I,(T1,T2)&gt; as tower_service::Service&lt;http::request::Request&lt;axum_core::body::Body&gt;&gt;&gt;::call::_{{closure}} (14,042,126 samples, 22.58%)</title><rect x="56.4516%" y="581" width="22.5806%" height="15" fill="rgb(249,195,6)" fg:x="35105315" fg:w="14042126"/><text x="56.7016%" y="591.50">&lt;axum::middleware::from_fn::FromFn&lt;F..</text></g><g><title>&lt;tower::util::map_response::MapResponseFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (14,042,126 samples, 22.58%)</title><rect x="56.4516%" y="565" width="22.5806%" height="15" fill="rgb(237,174,47)" fg:x="35105315" fg:w="14042126"/><text x="56.7016%" y="575.50">&lt;tower::util::map_response::MapRespo..</text></g><g><title>&lt;axum::routing::route::RouteFuture&lt;E&gt; as core::future::future::Future&gt;::poll (14,042,126 samples, 22.58%)</title><rect x="56.4516%" y="549" width="22.5806%" height="15" fill="rgb(206,201,31)" fg:x="35105315" fg:w="14042126"/><text x="56.7016%" y="559.50">&lt;axum::routing::route::RouteFuture&lt;E..</text></g><g><title>&lt;tower::util::map_response::MapResponseFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (14,042,126 samples, 22.58%)</title><rect x="56.4516%" y="533" width="22.5806%" height="15" fill="rgb(231,57,52)" fg:x="35105315" fg:w="14042126"/><text x="56.7016%" y="543.50">&lt;tower::util::map_response::MapRespo..</text></g><g><title>&lt;tower::util::map_response::MapResponseFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (14,042,126 samples, 22.58%)</title><rect x="56.4516%" y="517" width="22.5806%" height="15" fill="rgb(248,177,22)" fg:x="35105315" fg:w="14042126"/><text x="56.7016%" y="527.50">&lt;tower::util::map_response::MapRespo..</text></g><g><title>&lt;axum::routing::route::RouteFuture&lt;E&gt; as core::future::future::Future&gt;::poll (14,042,126 samples, 22.58%)</title><rect x="56.4516%" y="501" width="22.5806%" height="15" fill="rgb(215,211,37)" fg:x="35105315" fg:w="14042126"/><text x="56.7016%" y="511.50">&lt;axum::routing::route::RouteFuture&lt;E..</text></g><g><title>&lt;tower::util::map_response::MapResponseFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (14,042,126 samples, 22.58%)</title><rect x="56.4516%" y="485" width="22.5806%" height="15" fill="rgb(241,128,51)" fg:x="35105315" fg:w="14042126"/><text x="56.7016%" y="495.50">&lt;tower::util::map_response::MapRespo..</text></g><g><title>&lt;F as axum::handler::Handler&lt;(M,T1,T2,T3),S&gt;&gt;::call::_{{closure}} (14,042,126 samples, 22.58%)</title><rect x="56.4516%" y="469" width="22.5806%" height="15" fill="rgb(227,165,31)" fg:x="35105315" fg:w="14042126"/><text x="56.7016%" y="479.50">&lt;F as axum::handler::Handler&lt;(M,T1,T..</text></g><g><title>printpdf::PdfDocument::with_html (14,042,126 samples, 22.58%)</title><rect x="56.4516%" y="453" width="22.5806%" height="15" fill="rgb(228,167,24)" fg:x="35105315" fg:w="14042126"/><text x="56.7016%" y="463.50">printpdf::PdfDocument::with_html</text></g><g><title>printpdf::html::get_fcpat (10,030,090 samples, 16.13%)</title><rect x="62.9032%" y="437" width="16.1290%" height="15" fill="rgb(228,143,12)" fg:x="39117351" fg:w="10030090"/><text x="63.1532%" y="447.50">printpdf::html::get_fcpat</text></g><g><title>printpdf::font::BuiltinFont::get_subset_font (10,030,090 samples, 16.13%)</title><rect x="62.9032%" y="421" width="16.1290%" height="15" fill="rgb(249,149,8)" fg:x="39117351" fg:w="10030090"/><text x="63.1532%" y="431.50">printpdf::font::BuiltinFo..</text></g><g><title>printpdf::utils::uncompress (10,030,090 samples, 16.13%)</title><rect x="62.9032%" y="405" width="16.1290%" height="15" fill="rgb(243,35,44)" fg:x="39117351" fg:w="10030090"/><text x="63.1532%" y="415.50">printpdf::utils::uncompre..</text></g><g><title>std::io::default_read_to_end::small_probe_read (9,027,081 samples, 14.52%)</title><rect x="64.5161%" y="389" width="14.5161%" height="15" fill="rgb(246,89,9)" fg:x="40120360" fg:w="9027081"/><text x="64.7661%" y="399.50">std::io::default_read_..</text></g><g><title>&lt;flate2::gz::read::GzDecoder&lt;R&gt; as std::io::Read&gt;::read (9,027,081 samples, 14.52%)</title><rect x="64.5161%" y="373" width="14.5161%" height="15" fill="rgb(233,213,13)" fg:x="40120360" fg:w="9027081"/><text x="64.7661%" y="383.50">&lt;flate2::gz::read::GzD..</text></g><g><title>&lt;flate2::mem::Decompress as flate2::zio::Ops&gt;::run (9,027,081 samples, 14.52%)</title><rect x="64.5161%" y="357" width="14.5161%" height="15" fill="rgb(233,141,41)" fg:x="40120360" fg:w="9027081"/><text x="64.7661%" y="367.50">&lt;flate2::mem::Decompre..</text></g><g><title>miniz_oxide::inflate::stream::inflate_loop (9,027,081 samples, 14.52%)</title><rect x="64.5161%" y="341" width="14.5161%" height="15" fill="rgb(239,167,4)" fg:x="40120360" fg:w="9027081"/><text x="64.7661%" y="351.50">miniz_oxide::inflate::..</text></g><g><title>miniz_oxide::inflate::core::decompress (9,027,081 samples, 14.52%)</title><rect x="64.5161%" y="325" width="14.5161%" height="15" fill="rgb(209,217,16)" fg:x="40120360" fg:w="9027081"/><text x="64.7661%" y="335.50">miniz_oxide::inflate::..</text></g><g><title>miniz_oxide::inflate::core::init_tree (1,003,009 samples, 1.61%)</title><rect x="77.4194%" y="309" width="1.6129%" height="15" fill="rgb(219,88,35)" fg:x="48144432" fg:w="1003009"/><text x="77.6694%" y="319.50"></text></g><g><title>&lt;axum::routing::route::RouteFuture&lt;E&gt; as core::future::future::Future&gt;::poll (1,003,009 samples, 1.61%)</title><rect x="79.0323%" y="581" width="1.6129%" height="15" fill="rgb(220,193,23)" fg:x="49147441" fg:w="1003009"/><text x="79.2823%" y="591.50"></text></g><g><title>&lt;tower::util::map_response::MapResponseFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (1,003,009 samples, 1.61%)</title><rect x="79.0323%" y="565" width="1.6129%" height="15" fill="rgb(230,90,52)" fg:x="49147441" fg:w="1003009"/><text x="79.2823%" y="575.50"></text></g><g><title>&lt;axum::middleware::from_fn::FromFn&lt;F,S,I,(T1,T2)&gt; as tower_service::Service&lt;http::request::Request&lt;axum_core::body::Body&gt;&gt;&gt;::call::_{{closure}} (1,003,009 samples, 1.61%)</title><rect x="79.0323%" y="549" width="1.6129%" height="15" fill="rgb(252,106,19)" fg:x="49147441" fg:w="1003009"/><text x="79.2823%" y="559.50"></text></g><g><title>&lt;tower::util::map_response::MapResponseFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (1,003,009 samples, 1.61%)</title><rect x="79.0323%" y="533" width="1.6129%" height="15" fill="rgb(206,74,20)" fg:x="49147441" fg:w="1003009"/><text x="79.2823%" y="543.50"></text></g><g><title>&lt;axum::routing::route::RouteFuture&lt;E&gt; as core::future::future::Future&gt;::poll (1,003,009 samples, 1.61%)</title><rect x="79.0323%" y="517" width="1.6129%" height="15" fill="rgb(230,138,44)" fg:x="49147441" fg:w="1003009"/><text x="79.2823%" y="527.50"></text></g><g><title>&lt;tower::util::map_response::MapResponseFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (1,003,009 samples, 1.61%)</title><rect x="79.0323%" y="501" width="1.6129%" height="15" fill="rgb(235,182,43)" fg:x="49147441" fg:w="1003009"/><text x="79.2823%" y="511.50"></text></g><g><title>&lt;tower::util::map_response::MapResponseFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (1,003,009 samples, 1.61%)</title><rect x="79.0323%" y="485" width="1.6129%" height="15" fill="rgb(242,16,51)" fg:x="49147441" fg:w="1003009"/><text x="79.2823%" y="495.50"></text></g><g><title>&lt;axum::routing::route::RouteFuture&lt;E&gt; as core::future::future::Future&gt;::poll (1,003,009 samples, 1.61%)</title><rect x="79.0323%" y="469" width="1.6129%" height="15" fill="rgb(248,9,4)" fg:x="49147441" fg:w="1003009"/><text x="79.2823%" y="479.50"></text></g><g><title>&lt;tower::util::map_response::MapResponseFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (1,003,009 samples, 1.61%)</title><rect x="79.0323%" y="453" width="1.6129%" height="15" fill="rgb(210,31,22)" fg:x="49147441" fg:w="1003009"/><text x="79.2823%" y="463.50"></text></g><g><title>&lt;F as axum::handler::Handler&lt;(M,T1,T2,T3),S&gt;&gt;::call::_{{closure}} (1,003,009 samples, 1.61%)</title><rect x="79.0323%" y="437" width="1.6129%" height="15" fill="rgb(239,54,39)" fg:x="49147441" fg:w="1003009"/><text x="79.2823%" y="447.50"></text></g><g><title>&lt;notification_service::services::email::Mailer as notification_service::services::email::MailerTrait&gt;::send_mail::_{{closure}} (1,003,009 samples, 1.61%)</title><rect x="79.0323%" y="421" width="1.6129%" height="15" fill="rgb(230,99,41)" fg:x="49147441" fg:w="1003009"/><text x="79.2823%" y="431.50"></text></g><g><title>lettre::transport::AsyncTransport::send::_{{closure}} (1,003,009 samples, 1.61%)</title><rect x="79.0323%" y="405" width="1.6129%" height="15" fill="rgb(253,106,12)" fg:x="49147441" fg:w="1003009"/><text x="79.2823%" y="415.50"></text></g><g><title>&lt;lettre::transport::smtp::async_transport::AsyncSmtpTransport&lt;lettre::executor::Tokio1Executor&gt; as lettre::transport::AsyncTransport&gt;::send_raw::_{{closure}} (1,003,009 samples, 1.61%)</title><rect x="79.0323%" y="389" width="1.6129%" height="15" fill="rgb(213,46,41)" fg:x="49147441" fg:w="1003009"/><text x="79.2823%" y="399.50"></text></g><g><title>&lt;lettre::executor::Tokio1Executor as lettre::executor::Executor&gt;::connect::_{{closure}} (1,003,009 samples, 1.61%)</title><rect x="79.0323%" y="373" width="1.6129%" height="15" fill="rgb(215,133,35)" fg:x="49147441" fg:w="1003009"/><text x="79.2823%" y="383.50"></text></g><g><title>lettre::transport::smtp::client::async_net::AsyncNetworkStream::upgrade_tls::_{{closure}} (1,003,009 samples, 1.61%)</title><rect x="79.0323%" y="357" width="1.6129%" height="15" fill="rgb(213,28,5)" fg:x="49147441" fg:w="1003009"/><text x="79.2823%" y="367.50"></text></g><g><title>[libssl.so.3] (1,003,009 samples, 1.61%)</title><rect x="79.0323%" y="341" width="1.6129%" height="15" fill="rgb(215,77,49)" fg:x="49147441" fg:w="1003009"/><text x="79.2823%" y="351.50"></text></g><g><title>[libssl.so.3] (1,003,009 samples, 1.61%)</title><rect x="79.0323%" y="325" width="1.6129%" height="15" fill="rgb(248,100,22)" fg:x="49147441" fg:w="1003009"/><text x="79.2823%" y="335.50"></text></g><g><title>[libssl.so.3] (1,003,009 samples, 1.61%)</title><rect x="79.0323%" y="309" width="1.6129%" height="15" fill="rgb(208,67,9)" fg:x="49147441" fg:w="1003009"/><text x="79.2823%" y="319.50"></text></g><g><title>SHA512_Update (1,003,009 samples, 1.61%)</title><rect x="79.0323%" y="293" width="1.6129%" height="15" fill="rgb(219,133,21)" fg:x="49147441" fg:w="1003009"/><text x="79.2823%" y="303.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="79.0323%" y="277" width="1.6129%" height="15" fill="rgb(246,46,29)" fg:x="49147441" fg:w="1003009"/><text x="79.2823%" y="287.50"></text></g><g><title>lettre::transport::smtp::client::async_connection::AsyncSmtpConnection::ehlo::_{{closure}} (1,003,009 samples, 1.61%)</title><rect x="80.6452%" y="373" width="1.6129%" height="15" fill="rgb(246,185,52)" fg:x="50150450" fg:w="1003009"/><text x="80.8952%" y="383.50"></text></g><g><title>lettre::transport::smtp::client::async_connection::AsyncSmtpConnection::read_response::_{{closure}} (1,003,009 samples, 1.61%)</title><rect x="80.6452%" y="357" width="1.6129%" height="15" fill="rgb(252,136,11)" fg:x="50150450" fg:w="1003009"/><text x="80.8952%" y="367.50"></text></g><g><title>&lt;lettre::transport::smtp::client::async_net::AsyncNetworkStream as futures_io::if_std::AsyncRead&gt;::poll_read (1,003,009 samples, 1.61%)</title><rect x="80.6452%" y="341" width="1.6129%" height="15" fill="rgb(219,138,53)" fg:x="50150450" fg:w="1003009"/><text x="80.8952%" y="351.50"></text></g><g><title>SSL_read_ex (1,003,009 samples, 1.61%)</title><rect x="80.6452%" y="325" width="1.6129%" height="15" fill="rgb(211,51,23)" fg:x="50150450" fg:w="1003009"/><text x="80.8952%" y="335.50"></text></g><g><title>[libssl.so.3] (1,003,009 samples, 1.61%)</title><rect x="80.6452%" y="309" width="1.6129%" height="15" fill="rgb(247,221,28)" fg:x="50150450" fg:w="1003009"/><text x="80.8952%" y="319.50"></text></g><g><title>[libssl.so.3] (1,003,009 samples, 1.61%)</title><rect x="80.6452%" y="293" width="1.6129%" height="15" fill="rgb(251,222,45)" fg:x="50150450" fg:w="1003009"/><text x="80.8952%" y="303.50"></text></g><g><title>[libssl.so.3] (1,003,009 samples, 1.61%)</title><rect x="80.6452%" y="277" width="1.6129%" height="15" fill="rgb(217,162,53)" fg:x="50150450" fg:w="1003009"/><text x="80.8952%" y="287.50"></text></g><g><title>[libssl.so.3] (1,003,009 samples, 1.61%)</title><rect x="80.6452%" y="261" width="1.6129%" height="15" fill="rgb(229,93,14)" fg:x="50150450" fg:w="1003009"/><text x="80.8952%" y="271.50"></text></g><g><title>EVP_CipherInit_ex (1,003,009 samples, 1.61%)</title><rect x="80.6452%" y="245" width="1.6129%" height="15" fill="rgb(209,67,49)" fg:x="50150450" fg:w="1003009"/><text x="80.8952%" y="255.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="80.6452%" y="229" width="1.6129%" height="15" fill="rgb(213,87,29)" fg:x="50150450" fg:w="1003009"/><text x="80.8952%" y="239.50"></text></g><g><title>lettre::transport::smtp::client::async_connection::AsyncSmtpConnection::read_response::_{{closure}} (1,003,009 samples, 1.61%)</title><rect x="82.2581%" y="373" width="1.6129%" height="15" fill="rgb(205,151,52)" fg:x="51153459" fg:w="1003009"/><text x="82.5081%" y="383.50"></text></g><g><title>&lt;lettre::transport::smtp::client::async_net::AsyncNetworkStream as futures_io::if_std::AsyncRead&gt;::poll_read (1,003,009 samples, 1.61%)</title><rect x="82.2581%" y="357" width="1.6129%" height="15" fill="rgb(253,215,39)" fg:x="51153459" fg:w="1003009"/><text x="82.5081%" y="367.50"></text></g><g><title>SSL_read_ex (1,003,009 samples, 1.61%)</title><rect x="82.2581%" y="341" width="1.6129%" height="15" fill="rgb(221,220,41)" fg:x="51153459" fg:w="1003009"/><text x="82.5081%" y="351.50"></text></g><g><title>[libssl.so.3] (1,003,009 samples, 1.61%)</title><rect x="82.2581%" y="325" width="1.6129%" height="15" fill="rgb(218,133,21)" fg:x="51153459" fg:w="1003009"/><text x="82.5081%" y="335.50"></text></g><g><title>[libssl.so.3] (1,003,009 samples, 1.61%)</title><rect x="82.2581%" y="309" width="1.6129%" height="15" fill="rgb(221,193,43)" fg:x="51153459" fg:w="1003009"/><text x="82.5081%" y="319.50"></text></g><g><title>[libssl.so.3] (1,003,009 samples, 1.61%)</title><rect x="82.2581%" y="293" width="1.6129%" height="15" fill="rgb(240,128,52)" fg:x="51153459" fg:w="1003009"/><text x="82.5081%" y="303.50"></text></g><g><title>[libssl.so.3] (1,003,009 samples, 1.61%)</title><rect x="82.2581%" y="277" width="1.6129%" height="15" fill="rgb(253,114,12)" fg:x="51153459" fg:w="1003009"/><text x="82.5081%" y="287.50"></text></g><g><title>EVP_CIPHER_CTX_ctrl (1,003,009 samples, 1.61%)</title><rect x="82.2581%" y="261" width="1.6129%" height="15" fill="rgb(215,223,47)" fg:x="51153459" fg:w="1003009"/><text x="82.5081%" y="271.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="82.2581%" y="245" width="1.6129%" height="15" fill="rgb(248,225,23)" fg:x="51153459" fg:w="1003009"/><text x="82.5081%" y="255.50"></text></g><g><title>OSSL_PARAM_get_octet_string (1,003,009 samples, 1.61%)</title><rect x="82.2581%" y="229" width="1.6129%" height="15" fill="rgb(250,108,0)" fg:x="51153459" fg:w="1003009"/><text x="82.5081%" y="239.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="82.2581%" y="213" width="1.6129%" height="15" fill="rgb(228,208,7)" fg:x="51153459" fg:w="1003009"/><text x="82.5081%" y="223.50"></text></g><g><title>X509_verify_cert (1,003,009 samples, 1.61%)</title><rect x="83.8710%" y="309" width="1.6129%" height="15" fill="rgb(244,45,10)" fg:x="52156468" fg:w="1003009"/><text x="84.1210%" y="319.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="83.8710%" y="293" width="1.6129%" height="15" fill="rgb(207,125,25)" fg:x="52156468" fg:w="1003009"/><text x="84.1210%" y="303.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="83.8710%" y="277" width="1.6129%" height="15" fill="rgb(210,195,18)" fg:x="52156468" fg:w="1003009"/><text x="84.1210%" y="287.50"></text></g><g><title>X509_STORE_CTX_get1_issuer (1,003,009 samples, 1.61%)</title><rect x="83.8710%" y="261" width="1.6129%" height="15" fill="rgb(249,80,12)" fg:x="52156468" fg:w="1003009"/><text x="84.1210%" y="271.50"></text></g><g><title>X509_STORE_CTX_get_by_subject (1,003,009 samples, 1.61%)</title><rect x="83.8710%" y="245" width="1.6129%" height="15" fill="rgb(221,65,9)" fg:x="52156468" fg:w="1003009"/><text x="84.1210%" y="255.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="83.8710%" y="229" width="1.6129%" height="15" fill="rgb(235,49,36)" fg:x="52156468" fg:w="1003009"/><text x="84.1210%" y="239.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="83.8710%" y="213" width="1.6129%" height="15" fill="rgb(225,32,20)" fg:x="52156468" fg:w="1003009"/><text x="84.1210%" y="223.50"></text></g><g><title>OSSL_STORE_load (1,003,009 samples, 1.61%)</title><rect x="83.8710%" y="197" width="1.6129%" height="15" fill="rgb(215,141,46)" fg:x="52156468" fg:w="1003009"/><text x="84.1210%" y="207.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="83.8710%" y="181" width="1.6129%" height="15" fill="rgb(250,160,47)" fg:x="52156468" fg:w="1003009"/><text x="84.1210%" y="191.50"></text></g><g><title>OPENSSL_DIR_read (1,003,009 samples, 1.61%)</title><rect x="83.8710%" y="165" width="1.6129%" height="15" fill="rgb(216,222,40)" fg:x="52156468" fg:w="1003009"/><text x="84.1210%" y="175.50"></text></g><g><title>readdir64 (1,003,009 samples, 1.61%)</title><rect x="83.8710%" y="149" width="1.6129%" height="15" fill="rgb(234,217,39)" fg:x="52156468" fg:w="1003009"/><text x="84.1210%" y="159.50"></text></g><g><title>&lt;notification_service::services::email::Mailer as notification_service::services::email::MailerTrait&gt;::send_mail::_{{closure}} (4,012,036 samples, 6.45%)</title><rect x="80.6452%" y="437" width="6.4516%" height="15" fill="rgb(207,178,40)" fg:x="50150450" fg:w="4012036"/><text x="80.8952%" y="447.50">&lt;notific..</text></g><g><title>lettre::transport::AsyncTransport::send::_{{closure}} (4,012,036 samples, 6.45%)</title><rect x="80.6452%" y="421" width="6.4516%" height="15" fill="rgb(221,136,13)" fg:x="50150450" fg:w="4012036"/><text x="80.8952%" y="431.50">lettre::..</text></g><g><title>&lt;lettre::transport::smtp::async_transport::AsyncSmtpTransport&lt;lettre::executor::Tokio1Executor&gt; as lettre::transport::AsyncTransport&gt;::send_raw::_{{closure}} (4,012,036 samples, 6.45%)</title><rect x="80.6452%" y="405" width="6.4516%" height="15" fill="rgb(249,199,10)" fg:x="50150450" fg:w="4012036"/><text x="80.8952%" y="415.50">&lt;lettre:..</text></g><g><title>&lt;lettre::executor::Tokio1Executor as lettre::executor::Executor&gt;::connect::_{{closure}} (4,012,036 samples, 6.45%)</title><rect x="80.6452%" y="389" width="6.4516%" height="15" fill="rgb(249,222,13)" fg:x="50150450" fg:w="4012036"/><text x="80.8952%" y="399.50">&lt;lettre:..</text></g><g><title>lettre::transport::smtp::client::async_net::AsyncNetworkStream::upgrade_tls::_{{closure}} (2,006,018 samples, 3.23%)</title><rect x="83.8710%" y="373" width="3.2258%" height="15" fill="rgb(244,185,38)" fg:x="52156468" fg:w="2006018"/><text x="84.1210%" y="383.50">let..</text></g><g><title>[libssl.so.3] (2,006,018 samples, 3.23%)</title><rect x="83.8710%" y="357" width="3.2258%" height="15" fill="rgb(236,202,9)" fg:x="52156468" fg:w="2006018"/><text x="84.1210%" y="367.50">[li..</text></g><g><title>[libssl.so.3] (2,006,018 samples, 3.23%)</title><rect x="83.8710%" y="341" width="3.2258%" height="15" fill="rgb(250,229,37)" fg:x="52156468" fg:w="2006018"/><text x="84.1210%" y="351.50">[li..</text></g><g><title>[libssl.so.3] (2,006,018 samples, 3.23%)</title><rect x="83.8710%" y="325" width="3.2258%" height="15" fill="rgb(206,174,23)" fg:x="52156468" fg:w="2006018"/><text x="84.1210%" y="335.50">[li..</text></g><g><title>[libssl.so.3] (1,003,009 samples, 1.61%)</title><rect x="85.4839%" y="309" width="1.6129%" height="15" fill="rgb(211,33,43)" fg:x="53159477" fg:w="1003009"/><text x="85.7339%" y="319.50"></text></g><g><title>EVP_PKEY_copy_parameters (1,003,009 samples, 1.61%)</title><rect x="85.4839%" y="293" width="1.6129%" height="15" fill="rgb(245,58,50)" fg:x="53159477" fg:w="1003009"/><text x="85.7339%" y="303.50"></text></g><g><title>EVP_PKEY_set_type_by_keymgmt (1,003,009 samples, 1.61%)</title><rect x="85.4839%" y="277" width="1.6129%" height="15" fill="rgb(244,68,36)" fg:x="53159477" fg:w="1003009"/><text x="85.7339%" y="287.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="85.4839%" y="261" width="1.6129%" height="15" fill="rgb(232,229,15)" fg:x="53159477" fg:w="1003009"/><text x="85.7339%" y="271.50"></text></g><g><title>OPENSSL_LH_doall_arg (1,003,009 samples, 1.61%)</title><rect x="85.4839%" y="245" width="1.6129%" height="15" fill="rgb(254,30,23)" fg:x="53159477" fg:w="1003009"/><text x="85.7339%" y="255.50"></text></g><g><title>&lt;tower::util::map_response::MapResponseFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (7,021,063 samples, 11.29%)</title><rect x="80.6452%" y="581" width="11.2903%" height="15" fill="rgb(235,160,14)" fg:x="50150450" fg:w="7021063"/><text x="80.8952%" y="591.50">&lt;tower::util::map..</text></g><g><title>&lt;axum::middleware::from_fn::FromFn&lt;F,S,I,(T1,T2)&gt; as tower_service::Service&lt;http::request::Request&lt;axum_core::body::Body&gt;&gt;&gt;::call::_{{closure}} (7,021,063 samples, 11.29%)</title><rect x="80.6452%" y="565" width="11.2903%" height="15" fill="rgb(212,155,44)" fg:x="50150450" fg:w="7021063"/><text x="80.8952%" y="575.50">&lt;axum::middleware..</text></g><g><title>&lt;tower::util::map_response::MapResponseFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (7,021,063 samples, 11.29%)</title><rect x="80.6452%" y="549" width="11.2903%" height="15" fill="rgb(226,2,50)" fg:x="50150450" fg:w="7021063"/><text x="80.8952%" y="559.50">&lt;tower::util::map..</text></g><g><title>&lt;axum::routing::route::RouteFuture&lt;E&gt; as core::future::future::Future&gt;::poll (7,021,063 samples, 11.29%)</title><rect x="80.6452%" y="533" width="11.2903%" height="15" fill="rgb(234,177,6)" fg:x="50150450" fg:w="7021063"/><text x="80.8952%" y="543.50">&lt;axum::routing::r..</text></g><g><title>&lt;tower::util::map_response::MapResponseFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (7,021,063 samples, 11.29%)</title><rect x="80.6452%" y="517" width="11.2903%" height="15" fill="rgb(217,24,9)" fg:x="50150450" fg:w="7021063"/><text x="80.8952%" y="527.50">&lt;tower::util::map..</text></g><g><title>&lt;tower::util::map_response::MapResponseFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (7,021,063 samples, 11.29%)</title><rect x="80.6452%" y="501" width="11.2903%" height="15" fill="rgb(220,13,46)" fg:x="50150450" fg:w="7021063"/><text x="80.8952%" y="511.50">&lt;tower::util::map..</text></g><g><title>&lt;axum::routing::route::RouteFuture&lt;E&gt; as core::future::future::Future&gt;::poll (7,021,063 samples, 11.29%)</title><rect x="80.6452%" y="485" width="11.2903%" height="15" fill="rgb(239,221,27)" fg:x="50150450" fg:w="7021063"/><text x="80.8952%" y="495.50">&lt;axum::routing::r..</text></g><g><title>&lt;tower::util::map_response::MapResponseFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (7,021,063 samples, 11.29%)</title><rect x="80.6452%" y="469" width="11.2903%" height="15" fill="rgb(222,198,25)" fg:x="50150450" fg:w="7021063"/><text x="80.8952%" y="479.50">&lt;tower::util::map..</text></g><g><title>&lt;F as axum::handler::Handler&lt;(M,T1,T2,T3),S&gt;&gt;::call::_{{closure}} (7,021,063 samples, 11.29%)</title><rect x="80.6452%" y="453" width="11.2903%" height="15" fill="rgb(211,99,13)" fg:x="50150450" fg:w="7021063"/><text x="80.8952%" y="463.50">&lt;F as axum::handl..</text></g><g><title>printpdf::PdfDocument::with_html (3,009,027 samples, 4.84%)</title><rect x="87.0968%" y="437" width="4.8387%" height="15" fill="rgb(232,111,31)" fg:x="54162486" fg:w="3009027"/><text x="87.3468%" y="447.50">printp..</text></g><g><title>rust_fontconfig::FcFontCache::with_memory_fonts (3,009,027 samples, 4.84%)</title><rect x="87.0968%" y="421" width="4.8387%" height="15" fill="rgb(245,82,37)" fg:x="54162486" fg:w="3009027"/><text x="87.3468%" y="431.50">rust_f..</text></g><g><title>&lt;base64::engine::general_purpose::GeneralPurpose as base64::engine::Engine&gt;::internal_encode (3,009,027 samples, 4.84%)</title><rect x="87.0968%" y="405" width="4.8387%" height="15" fill="rgb(227,149,46)" fg:x="54162486" fg:w="3009027"/><text x="87.3468%" y="415.50">&lt;base6..</text></g><g><title>&lt;lettre::executor::Tokio1Executor as lettre::executor::Executor&gt;::connect::_{{closure}} (1,003,009 samples, 1.61%)</title><rect x="93.5484%" y="357" width="1.6129%" height="15" fill="rgb(218,36,50)" fg:x="58174522" fg:w="1003009"/><text x="93.7984%" y="367.50"></text></g><g><title>lettre::transport::smtp::client::async_net::AsyncNetworkStream::upgrade_tls::_{{closure}} (1,003,009 samples, 1.61%)</title><rect x="93.5484%" y="341" width="1.6129%" height="15" fill="rgb(226,80,48)" fg:x="58174522" fg:w="1003009"/><text x="93.7984%" y="351.50"></text></g><g><title>BIO_get_data (1,003,009 samples, 1.61%)</title><rect x="93.5484%" y="325" width="1.6129%" height="15" fill="rgb(238,224,15)" fg:x="58174522" fg:w="1003009"/><text x="93.7984%" y="335.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_write (3,009,027 samples, 4.84%)</title><rect x="91.9355%" y="581" width="4.8387%" height="15" fill="rgb(241,136,10)" fg:x="57171513" fg:w="3009027"/><text x="92.1855%" y="591.50">hyper:..</text></g><g><title>&lt;axum::routing::route::RouteFuture&lt;E&gt; as core::future::future::Future&gt;::poll (3,009,027 samples, 4.84%)</title><rect x="91.9355%" y="565" width="4.8387%" height="15" fill="rgb(208,32,45)" fg:x="57171513" fg:w="3009027"/><text x="92.1855%" y="575.50">&lt;axum:..</text></g><g><title>&lt;tower::util::map_response::MapResponseFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (3,009,027 samples, 4.84%)</title><rect x="91.9355%" y="549" width="4.8387%" height="15" fill="rgb(207,135,9)" fg:x="57171513" fg:w="3009027"/><text x="92.1855%" y="559.50">&lt;tower..</text></g><g><title>&lt;axum::middleware::from_fn::FromFn&lt;F,S,I,(T1,T2)&gt; as tower_service::Service&lt;http::request::Request&lt;axum_core::body::Body&gt;&gt;&gt;::call::_{{closure}} (3,009,027 samples, 4.84%)</title><rect x="91.9355%" y="533" width="4.8387%" height="15" fill="rgb(206,86,44)" fg:x="57171513" fg:w="3009027"/><text x="92.1855%" y="543.50">&lt;axum:..</text></g><g><title>&lt;tower::util::map_response::MapResponseFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (3,009,027 samples, 4.84%)</title><rect x="91.9355%" y="517" width="4.8387%" height="15" fill="rgb(245,177,15)" fg:x="57171513" fg:w="3009027"/><text x="92.1855%" y="527.50">&lt;tower..</text></g><g><title>&lt;axum::routing::route::RouteFuture&lt;E&gt; as core::future::future::Future&gt;::poll (3,009,027 samples, 4.84%)</title><rect x="91.9355%" y="501" width="4.8387%" height="15" fill="rgb(206,64,50)" fg:x="57171513" fg:w="3009027"/><text x="92.1855%" y="511.50">&lt;axum:..</text></g><g><title>&lt;tower::util::map_response::MapResponseFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (3,009,027 samples, 4.84%)</title><rect x="91.9355%" y="485" width="4.8387%" height="15" fill="rgb(234,36,40)" fg:x="57171513" fg:w="3009027"/><text x="92.1855%" y="495.50">&lt;tower..</text></g><g><title>&lt;tower::util::map_response::MapResponseFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (3,009,027 samples, 4.84%)</title><rect x="91.9355%" y="469" width="4.8387%" height="15" fill="rgb(213,64,8)" fg:x="57171513" fg:w="3009027"/><text x="92.1855%" y="479.50">&lt;tower..</text></g><g><title>&lt;axum::routing::route::RouteFuture&lt;E&gt; as core::future::future::Future&gt;::poll (3,009,027 samples, 4.84%)</title><rect x="91.9355%" y="453" width="4.8387%" height="15" fill="rgb(210,75,36)" fg:x="57171513" fg:w="3009027"/><text x="92.1855%" y="463.50">&lt;axum:..</text></g><g><title>&lt;tower::util::map_response::MapResponseFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (3,009,027 samples, 4.84%)</title><rect x="91.9355%" y="437" width="4.8387%" height="15" fill="rgb(229,88,21)" fg:x="57171513" fg:w="3009027"/><text x="92.1855%" y="447.50">&lt;tower..</text></g><g><title>&lt;F as axum::handler::Handler&lt;(M,T1,T2,T3),S&gt;&gt;::call::_{{closure}} (3,009,027 samples, 4.84%)</title><rect x="91.9355%" y="421" width="4.8387%" height="15" fill="rgb(252,204,47)" fg:x="57171513" fg:w="3009027"/><text x="92.1855%" y="431.50">&lt;F as ..</text></g><g><title>&lt;notification_service::services::email::Mailer as notification_service::services::email::MailerTrait&gt;::send_mail::_{{closure}} (3,009,027 samples, 4.84%)</title><rect x="91.9355%" y="405" width="4.8387%" height="15" fill="rgb(208,77,27)" fg:x="57171513" fg:w="3009027"/><text x="92.1855%" y="415.50">&lt;notif..</text></g><g><title>lettre::transport::AsyncTransport::send::_{{closure}} (3,009,027 samples, 4.84%)</title><rect x="91.9355%" y="389" width="4.8387%" height="15" fill="rgb(221,76,26)" fg:x="57171513" fg:w="3009027"/><text x="92.1855%" y="399.50">lettre..</text></g><g><title>&lt;lettre::transport::smtp::async_transport::AsyncSmtpTransport&lt;lettre::executor::Tokio1Executor&gt; as lettre::transport::AsyncTransport&gt;::send_raw::_{{closure}} (3,009,027 samples, 4.84%)</title><rect x="91.9355%" y="373" width="4.8387%" height="15" fill="rgb(225,139,18)" fg:x="57171513" fg:w="3009027"/><text x="92.1855%" y="383.50">&lt;lettr..</text></g><g><title>lettre::transport::smtp::client::async_connection::AsyncSmtpConnection::read_response::_{{closure}} (1,003,009 samples, 1.61%)</title><rect x="95.1613%" y="357" width="1.6129%" height="15" fill="rgb(230,137,11)" fg:x="59177531" fg:w="1003009"/><text x="95.4113%" y="367.50"></text></g><g><title>&lt;lettre::transport::smtp::client::async_net::AsyncNetworkStream as futures_io::if_std::AsyncRead&gt;::poll_read (1,003,009 samples, 1.61%)</title><rect x="95.1613%" y="341" width="1.6129%" height="15" fill="rgb(212,28,1)" fg:x="59177531" fg:w="1003009"/><text x="95.4113%" y="351.50"></text></g><g><title>SSL_read_ex (1,003,009 samples, 1.61%)</title><rect x="95.1613%" y="325" width="1.6129%" height="15" fill="rgb(248,164,17)" fg:x="59177531" fg:w="1003009"/><text x="95.4113%" y="335.50"></text></g><g><title>[libssl.so.3] (1,003,009 samples, 1.61%)</title><rect x="95.1613%" y="309" width="1.6129%" height="15" fill="rgb(222,171,42)" fg:x="59177531" fg:w="1003009"/><text x="95.4113%" y="319.50"></text></g><g><title>[libssl.so.3] (1,003,009 samples, 1.61%)</title><rect x="95.1613%" y="293" width="1.6129%" height="15" fill="rgb(243,84,45)" fg:x="59177531" fg:w="1003009"/><text x="95.4113%" y="303.50"></text></g><g><title>[libssl.so.3] (1,003,009 samples, 1.61%)</title><rect x="95.1613%" y="277" width="1.6129%" height="15" fill="rgb(252,49,23)" fg:x="59177531" fg:w="1003009"/><text x="95.4113%" y="287.50"></text></g><g><title>[libssl.so.3] (1,003,009 samples, 1.61%)</title><rect x="95.1613%" y="261" width="1.6129%" height="15" fill="rgb(215,19,7)" fg:x="59177531" fg:w="1003009"/><text x="95.4113%" y="271.50"></text></g><g><title>EVP_DecryptUpdate (1,003,009 samples, 1.61%)</title><rect x="95.1613%" y="245" width="1.6129%" height="15" fill="rgb(238,81,41)" fg:x="59177531" fg:w="1003009"/><text x="95.4113%" y="255.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="95.1613%" y="229" width="1.6129%" height="15" fill="rgb(210,199,37)" fg:x="59177531" fg:w="1003009"/><text x="95.4113%" y="239.50"></text></g><g><title>[libcrypto.so.3] (1,003,009 samples, 1.61%)</title><rect x="95.1613%" y="213" width="1.6129%" height="15" fill="rgb(244,192,49)" fg:x="59177531" fg:w="1003009"/><text x="95.4113%" y="223.50"></text></g><g><title>printpdf::PdfDocument::with_html (1,003,009 samples, 1.61%)</title><rect x="96.7742%" y="581" width="1.6129%" height="15" fill="rgb(226,211,11)" fg:x="60180540" fg:w="1003009"/><text x="97.0242%" y="591.50"></text></g><g><title>printpdf::html::push_rectangles_into_displaylist (1,003,009 samples, 1.61%)</title><rect x="96.7742%" y="565" width="1.6129%" height="15" fill="rgb(236,162,54)" fg:x="60180540" fg:w="1003009"/><text x="97.0242%" y="575.50"></text></g><g><title>printpdf::html::push_rectangles_into_displaylist (1,003,009 samples, 1.61%)</title><rect x="96.7742%" y="549" width="1.6129%" height="15" fill="rgb(220,229,9)" fg:x="60180540" fg:w="1003009"/><text x="97.0242%" y="559.50"></text></g><g><title>printpdf::html::displaylist_handle_rect (1,003,009 samples, 1.61%)</title><rect x="96.7742%" y="533" width="1.6129%" height="15" fill="rgb(250,87,22)" fg:x="60180540" fg:w="1003009"/><text x="97.0242%" y="543.50"></text></g><g><title>printpdf::font::ParsedFont::from_bytes (1,003,009 samples, 1.61%)</title><rect x="96.7742%" y="517" width="1.6129%" height="15" fill="rgb(239,43,17)" fg:x="60180540" fg:w="1003009"/><text x="97.0242%" y="527.50"></text></g><g><title>core::slice::sort::stable::driftsort_main (1,003,009 samples, 1.61%)</title><rect x="96.7742%" y="501" width="1.6129%" height="15" fill="rgb(231,177,25)" fg:x="60180540" fg:w="1003009"/><text x="97.0242%" y="511.50"></text></g><g><title>core::slice::sort::stable::drift::sort (1,003,009 samples, 1.61%)</title><rect x="96.7742%" y="485" width="1.6129%" height="15" fill="rgb(219,179,1)" fg:x="60180540" fg:w="1003009"/><text x="97.0242%" y="495.50"></text></g><g><title>all (62,186,558 samples, 100%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(238,219,53)" fg:x="0" fg:w="62186558"/><text x="0.2500%" y="639.50"></text></g><g><title>tokio-runtime-w (39,117,351 samples, 62.90%)</title><rect x="37.0968%" y="613" width="62.9032%" height="15" fill="rgb(232,167,36)" fg:x="23069207" fg:w="39117351"/><text x="37.3468%" y="623.50">tokio-runtime-w</text></g><g><title>[unknown] (27,081,243 samples, 43.55%)</title><rect x="56.4516%" y="597" width="43.5484%" height="15" fill="rgb(244,19,51)" fg:x="35105315" fg:w="27081243"/><text x="56.7016%" y="607.50">[unknown]</text></g><g><title>tokio::runtime::task::raw::poll (1,003,009 samples, 1.61%)</title><rect x="98.3871%" y="581" width="1.6129%" height="15" fill="rgb(224,6,22)" fg:x="61183549" fg:w="1003009"/><text x="98.6371%" y="591.50"></text></g><g><title>&lt;axum::serve::Serve&lt;M,S&gt; as core::future::into_future::IntoFuture&gt;::into_future::_{{closure}}::_{{closure}} (1,003,009 samples, 1.61%)</title><rect x="98.3871%" y="565" width="1.6129%" height="15" fill="rgb(224,145,5)" fg:x="61183549" fg:w="1003009"/><text x="98.6371%" y="575.50"></text></g><g><title>&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (1,003,009 samples, 1.61%)</title><rect x="98.3871%" y="549" width="1.6129%" height="15" fill="rgb(234,130,49)" fg:x="61183549" fg:w="1003009"/><text x="98.6371%" y="559.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_write (1,003,009 samples, 1.61%)</title><rect x="98.3871%" y="533" width="1.6129%" height="15" fill="rgb(254,6,2)" fg:x="61183549" fg:w="1003009"/><text x="98.6371%" y="543.50"></text></g><g><title>&lt;axum::routing::route::RouteFuture&lt;E&gt; as core::future::future::Future&gt;::poll (1,003,009 samples, 1.61%)</title><rect x="98.3871%" y="517" width="1.6129%" height="15" fill="rgb(208,96,46)" fg:x="61183549" fg:w="1003009"/><text x="98.6371%" y="527.50"></text></g><g><title>&lt;tower::util::map_response::MapResponseFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (1,003,009 samples, 1.61%)</title><rect x="98.3871%" y="501" width="1.6129%" height="15" fill="rgb(239,3,39)" fg:x="61183549" fg:w="1003009"/><text x="98.6371%" y="511.50"></text></g><g><title>&lt;axum::middleware::from_fn::FromFn&lt;F,S,I,(T1,T2)&gt; as tower_service::Service&lt;http::request::Request&lt;axum_core::body::Body&gt;&gt;&gt;::call::_{{closure}} (1,003,009 samples, 1.61%)</title><rect x="98.3871%" y="485" width="1.6129%" height="15" fill="rgb(233,210,1)" fg:x="61183549" fg:w="1003009"/><text x="98.6371%" y="495.50"></text></g><g><title>notification_service::services::database::Pool::get_client::_{{closure}} (1,003,009 samples, 1.61%)</title><rect x="98.3871%" y="469" width="1.6129%" height="15" fill="rgb(244,137,37)" fg:x="61183549" fg:w="1003009"/><text x="98.6371%" y="479.50"></text></g><g><title>&lt;deadpool_postgres::Manager as deadpool::managed::Manager&gt;::recycle::_{{closure}} (1,003,009 samples, 1.61%)</title><rect x="98.3871%" y="453" width="1.6129%" height="15" fill="rgb(240,136,2)" fg:x="61183549" fg:w="1003009"/><text x="98.6371%" y="463.50"></text></g></svg></svg>